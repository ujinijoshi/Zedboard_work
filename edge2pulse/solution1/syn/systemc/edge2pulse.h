// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _edge2pulse_HH_
#define _edge2pulse_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct edge2pulse : public sc_module {
    // Port declarations 4
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<1> > signal_r;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    edge2pulse(sc_module_name name);
    SC_HAS_PROCESS(edge2pulse);

    ~edge2pulse();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<3> > reg_V;
    sc_signal< sc_lv<1> > tmp_3_fu_90_p2;
    sc_signal< sc_lv<1> > tmp_3_reg_96;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<1> > p_s_phi_fu_42_p4;
    sc_signal< sc_lv<1> > p_s_reg_38;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_31;
    sc_signal< sc_lv<3> > p_Result_s_fu_58_p3;
    sc_signal< sc_lv<2> > tmp_fu_54_p1;
    sc_signal< sc_lv<1> > tmp_2_fu_80_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_72_p3;
    sc_signal< sc_lv<1> > p_Result_1_not_fu_84_p2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_st1_fsm_0;
    static const sc_lv<2> ap_ST_st2_fsm_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_return();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_31();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_p_Result_1_not_fu_84_p2();
    void thread_p_Result_s_fu_58_p3();
    void thread_p_s_phi_fu_42_p4();
    void thread_tmp_1_fu_72_p3();
    void thread_tmp_2_fu_80_p1();
    void thread_tmp_3_fu_90_p2();
    void thread_tmp_fu_54_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
